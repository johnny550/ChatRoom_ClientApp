package clientapp;

import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.rmi.RemoteException;
import java.util.Enumeration;

import javax.swing.DefaultListModel;
import clientapp.Client1;
import controlleurs.CtrUser;

/**
 *
 * @author Chris
 */
public class ClientGUI2 extends javax.swing.JFrame implements MouseListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	static String lUserCon;
	static String[] lUserConF;
	int nbUsersCon;
	static String aQuiParler;

	/**
	 * Creates new form ClientGUI2
	 */
	public ClientGUI2() {
		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		labUser = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		listUtilisateursEnLigne = new javax.swing.JList();
		jLabel3 = new javax.swing.JLabel();
		btLogout = new javax.swing.JButton();
		jScrollPane3 = new javax.swing.JScrollPane();
		listInterlocuteurs = new javax.swing.JList();
		btLancerDiscussion = new javax.swing.JButton();
		btRemove = new javax.swing.JButton();
		
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setForeground(new java.awt.Color(0, 0, 204));

		jPanel1.setForeground(new java.awt.Color(102, 51, 255));

		jLabel1.setFont(new java.awt.Font("Tekton Pro", 1, 18)); // NOI18N
		jLabel1.setText("Bienvenue");

		labUser.setFont(new java.awt.Font("Tekton Pro", 1, 18)); // NOI18N
		labUser.setText(Client1.getTxtLog().getText());

		listUtilisateursEnLigne.setForeground(new java.awt.Color(204, 204, 204));
		listUtilisateursEnLigne.setModel(new javax.swing.AbstractListModel() {
			// affichage des utilisateurs connectés

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = utilisateursConnectes();

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}

		});

		listUtilisateursEnLigne.setFocusable(false);
		listUtilisateursEnLigne.addMouseListener(this);
		jScrollPane2.setViewportView(listUtilisateursEnLigne);

		jLabel3.setFont(new java.awt.Font("Tekton Pro", 0, 16)); // NOI18N
		jLabel3.setText("En ligne: ( " + nbreUtilisateursCon() + " )");

		btLogout.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
		btLogout.setText("Se déconnecter");
		btLogout.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btLogoutActionPerformed(evt);
			}
		});

		listInterlocuteurs.setBackground(new java.awt.Color(204, 204, 255));
		listInterlocuteurs.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
		listInterlocuteurs.setFont(new java.awt.Font("Tekton Pro", 1, 14)); // NOI18N
		listInterlocuteurs.setModel(new javax.swing.AbstractListModel() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = { "items " };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		listInterlocuteurs.setFocusable(false);
		jScrollPane3.setViewportView(listInterlocuteurs);

		btLancerDiscussion.setBackground(new java.awt.Color(204, 204, 204));
		btLancerDiscussion.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
		btLancerDiscussion.setText("Discuter");
		btLancerDiscussion.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btLancerDiscussionActionPerformed(evt);
			}
		});

		btRemove.setBackground(new java.awt.Color(204, 204, 204));
		btRemove.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
		btRemove.setText("Retirer");
		btRemove.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btRemoveActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(17, 17, 17).addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(26, 26, 26).addComponent(jLabel3)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88,
										Short.MAX_VALUE)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(btLogout, javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE, 131,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(btLancerDiscussion).addComponent(btRemove,
												javax.swing.GroupLayout.PREFERRED_SIZE, 85,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap())))
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(133, 133, 133)
						.addComponent(jLabel1).addGap(18, 18, 18).addComponent(labUser,
								javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1).addComponent(labUser))
						.addGap(41, 41, 41).addComponent(jLabel3)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 202,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(71, 71, 71)
										.addComponent(btLancerDiscussion).addGap(34, 34, 34).addComponent(btRemove)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
						.addComponent(btLogout)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(19, 19, 19)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(25, Short.MAX_VALUE)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(20, 20, 20)));

		pack();
	}// </editor-fold>

	private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {
		String nom = labUser.getText();
		try {
			Client1.getImage_locale().logout(nom);
			CtrUser.logoutEffect();
			this.dispose();

			new Client1();
		} catch (RemoteException e) {
			System.out.println(e);
			e.printStackTrace();
		}

	}

	//retirer un utilisateur du groupe de discussion
	private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {
	
		if(listInterlocuteurs.isSelectionEmpty()==false)
		{
			int index=listInterlocuteurs.getSelectedIndex();
			//listInterlocuteurs.remove(index);
			((DefaultListModel)listInterlocuteurs.getModel()).removeElementAt(index);
		}
	}
	
	
	//entamer la discussion
	private void btLancerDiscussionActionPerformed(java.awt.event.ActionEvent evt) {
		//récupération du (des) interlocuteur(s)
		/*
		Enumeration tab=((DefaultListModel)listInterlocuteurs.getModel()).elements();
				          
		while(tab.hasMoreElements())
		{
			 aQuiParler=tab.nextElement().toString().concat(", "+tab.nextElement().toString());		
		}*/
		
		javax.swing.ListModel model1 = listInterlocuteurs.getModel();
		// Note pour eviter une ClassCastException, initialiser la liste avec le constructeur approprie prenant un model en parametre.
		
		int size = model1.getSize();
		for (int i = 0 ; i < size ; i++) {
		   aQuiParler = model1.toString();
		 
		 
		} 
		//cloacking de la fenêtre courante (GUI2Client)
		//this.setVisible(false);
		 
		if(aQuiParler.contains(labUser.getText()))
		{
			javax.swing.JOptionPane.showMessageDialog(null, "Ne soluloquez pas!");
			
		}
		else
		{
		 //ouverture de la fenêtre de discussion
		new ChatWindows().setVisible(true);
		}
	}
	
	
	
	 

	// méthode retournant le login de chaque utilisateur connecté
	private String[] utilisateursConnectes() {

		try {

			lUserCon = Client1.image_locale.getUsersOnline();

		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		lUserConF = lUserCon.split(":");
		return lUserConF;

	}

	/*
	 * @Override public String toString() {String log = null; for (String
	 * a:lUserCon) { //log= lUserCon.toString()+"\n"; log=String.format("\n",
	 * lUserCon.toString()); } System.out.println(log); return log; }
	 * 
	 */

	// méthode pour compter le nombre d'utilisateurs connectés
	private int nbreUtilisateursCon() {

		try {

			nbUsersCon = Client1.image_locale.getNumberOfUsersOnline();

		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return nbUsersCon;

	}

	/**
	 * @param args
	 *            the command line arguments
	 */

	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ClientGUI2().setVisible(true);
			}
		});

	}

	// Variables declaration - do not modify

	private javax.swing.JButton btLancerDiscussion;
	private javax.swing.JButton btLogout;
	private javax.swing.JButton btRemove;
	private javax.swing.JLabel jLabel1;
	private static javax.swing.JLabel labUser;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JList<?> listInterlocuteurs;
	private javax.swing.JList listUtilisateursEnLigne;
	DefaultListModel modele = new DefaultListModel();
	// End of variables declaration

	
	
	//getter de labUser
	public static javax.swing.JLabel getLabUser() {
		return labUser;
	}



	@Override
	public void mouseClicked(MouseEvent arg0) {
		
				                 
	//ajout de ce(s) interlocuteur(s) dans la liste des chats
     if ( listUtilisateursEnLigne.isSelectionEmpty() == false)
     {
    	 
         modele.addElement(listUtilisateursEnLigne.getSelectedValue());
         
         listInterlocuteurs.setModel(modele);
         
       
     } 
    	 
	}	  
     

	
	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public void mouseExited(MouseEvent arg0) {

		/*
		 * TESTS utilisateursConnectes(); System.out.println("OK");
		 * System.out.println(lUserCon.toString());
		 */

		// Rafraîchissement de la liste des utilisateurs connectés

		listUtilisateursEnLigne.setModel(new javax.swing.AbstractListModel() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = utilisateursConnectes();

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		
		//et du nombre de connectés
		jLabel3.setText("En ligne: ( " + nbreUtilisateursCon() + " )");
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

}